<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
    <!-- ======================================================================================== -->
    <!--                                                                                          -->
    <!--                                                                                          -->
    <!-- ====================================redis数据源配置======================================= -->
    <!--                                                                                          -->
    <!--                                                                                          -->
    <!-- ======================================================================================== -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.clients.jedis.jedispoolconfig.maxidle}"/>
        <property name="maxTotal" value="${redis.clients.jedis.jedispoolconfig.maxtotal}"/>
        <property name="blockWhenExhausted" value="${redis.clients.jedis.jedispoolconfig.blockwhenexhausted}"/>
        <property name="maxWaitMillis" value="${redis.clients.jedis.jedispoolconfig.maxwaitmillis}"/>
        <property name="testOnBorrow" value="${redis.clients.jedis.jedispoolconfig.testonborrow}"/>
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="hostName" value="${session.redis.ip}"/>
        <property name="port" value="${session.redis.port}"/>
        <property name="usePool" value="true"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>

    <bean class="cn.inbs.blockchain.common.session.SessionUtils">
        <constructor-arg index="0" ref="redisTemplate"/>
        <constructor-arg index="1" value="86400"/>
    </bean>

    <!-- 静态注入 -->
    <bean class="cn.inbs.blockchain.common.utils.MobileUtils">
        <constructor-arg index="0" ref="redisTemplate"/>
        <constructor-arg index="1" value="900"/>
    </bean>

    <!--图表缓存工具类-->
    <bean class="cn.inbs.blockchain.common.cache.ChartCacheUtils">
        <constructor-arg index="0" ref="redisTemplate"/>
        <constructor-arg index="1" ref="redisTemplate"/>
        <constructor-arg index="2" ref="redisTemplate"/>
        <constructor-arg index="3" ref="redisTemplate"/>
        <constructor-arg index="4" ref="redisTemplate"/>
    </bean>
</beans>